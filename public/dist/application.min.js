"use strict";function hasRol(rol,roles){for(var result=!1,i=roles.length-1;i>=0;i--)if(roles[i]===rol){result=!0;break}return result}var ApplicationConfiguration=function(){var applicationModuleName="testing-competition",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","permission","isteven-multi-select","ngTable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("competitions"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("countries"),ApplicationConfiguration.registerModule("groups"),ApplicationConfiguration.registerModule("users"),angular.module("users").run(["Authentication","$q","Permission",function(Authentication,$q,Permission){var roles=Authentication.user.roles;Permission.defineRole("user",function(stateParams){return hasRol("user",roles)}).defineRole("admin",function(stateParams){return hasRol("admin",roles)})}]),angular.module("competitions").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Competitions","competitions","dropdown","/competitions(/create)?",!0,["admin"]),Menus.addSubMenuItem("topbar","competitions","List Competitions","competitions"),Menus.addSubMenuItem("topbar","competitions","New Competition","competitions/create"),Menus.addMenuItem("topbar","My Competitions","my_competitions","dropdown","/competitions(/create)?",!0,["user"]),Menus.addSubMenuItem("topbar","my_competitions","See Competitions List","my_competitions")}]),angular.module("competitions").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCompetitions",{url:"/competitions",templateUrl:"modules/competitions/views/list-competitions.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("createCompetition",{url:"/competitions/create",templateUrl:"modules/competitions/views/create-competition.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("viewCompetition",{url:"/competitions/:competitionId",templateUrl:"modules/competitions/views/view-competition.client.view.html",data:{permissions:{only:["admin","user"],redirectTo:"home"}}}).state("editCompetition",{url:"/competitions/:competitionId/edit",templateUrl:"modules/competitions/views/edit-competition.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("listMyCompetitions",{url:"/my_competitions",templateUrl:"modules/competitions/views/my-competitions-list.view.html",data:{permissions:{only:["user"],redirectTo:"home"}}})}]),angular.module("competitions").controller("CompetitionsController",["$scope","$stateParams","$location","Authentication","Competitions","Bugs","Groups","NgTableParams",function($scope,$stateParams,$location,Authentication,Competitions,Bugs,Groups,NgTableParams){function restartShowsVariables(exception){$scope.showCreateBug=!1,$scope.showOpenBugs=!1,$scope.showMyOpenBugs=!1,$scope.showListBugsPerGroup=!1,$scope.showRanking=!1,$scope.showUsersRanking=!1,$scope.showGroupsRanking=!1,$scope.showGroupsWithMoreBugsRanking=!1}$scope.authentication=Authentication,$scope.groupsSelectedList=[],$scope.wrapperGroupsList=[],$scope.openBugs,$scope.myOpenBugs,$scope.rankingTypes=[{name:"Users Ranking"},{name:"Groups Ranking"}],$scope.showCreateBug=!0,$scope.showOpenBugs=!1,$scope.showMyOpenBugs=!1,$scope.showListBugsPerGroup=!1,$scope.showRanking=!1,$scope.showUsersRanking=!1,$scope.showGroupsRanking=!1,$scope.showGroupsWithMoreBugsRanking=!1,$scope.showRankingType=function(ranking){"USERS RANKING"===ranking.toUpperCase()?$scope.getUsersRanking():"GROUPS RANKING"===ranking.toUpperCase()?$scope.getGroupsRanking():"GROUPS WITH MORE BUGS RANKING"===ranking.toUpperCase()&&$scope.getGroupsWithMoreBugsRanking()},$scope.usersRankingDatatable=function(){var data=$scope.usersRanking;$scope.datatableUsersRanking=new NgTableParams({page:1,count:10},{data:data,filterDelay:300})},$scope.groupsRankingDatatable=function(){var data=$scope.groupsRanking;console.log($scope.groupsRanking),$scope.datatableGroupsRanking=new NgTableParams({page:1,count:10},{data:data,filterDelay:300})},$scope.groupsWithMoreBugsRankingDatatable=function(){var data=$scope.groupsWithMoreBugsRanking;console.log("groupsWithMoreBugsRankingDatatable",$scope.groupsWithMoreBugsRanking),$scope.datatableGroupsWithMoreBugsRanking=new NgTableParams({page:1,count:10},{data:data,filterDelay:300})},$scope.bugsRepeatListDatatable=function(){var data=$scope.openBugs;$scope.datatableListBugsRepeat=new NgTableParams({page:1,count:10},{data:data,filterDelay:300})},$scope.myOpenBugsDatatable=function(){var data=$scope.myOpenBugs;$scope.datatableMyOpenBugs=new NgTableParams({page:1,count:10},{data:data,filterDelay:300})},$scope.changeStatus=function(bugId,newStatus){var config={bugId:bugId,status:newStatus};Bugs.changeStatus(config,function(bug){console.log("Status changed"),$scope.searchMyOpenBugs()})},$scope.getUsersRanking=function(){var config={competition:$scope.competition._id};Bugs.getUsersRanking(config,function(ranking){console.log(ranking),$scope.usersRanking=ranking;var showUsersRanking=$scope.showUsersRanking;restartShowsVariables(),$scope.showUsersRanking=!showUsersRanking})},$scope.getGroupsRanking=function(){var config={competition:$scope.competition._id};Bugs.getGroupsRanking(config,function(ranking){$scope.groupsRanking=ranking;var showGroupsRanking=$scope.showGroupsRanking;restartShowsVariables(),$scope.showGroupsRanking=!showGroupsRanking})},$scope.getGroupsWithMoreBugsRanking=function(){var config={competition:$scope.competition._id};Bugs.getGroupsWithMoreBugsRanking(config,function(ranking){$scope.groupsWithMoreBugsRanking=ranking;var showGroupsWithMoreBugsRanking=$scope.showGroupsWithMoreBugsRanking;restartShowsVariables(),$scope.showGroupsWithMoreBugsRanking=!showGroupsWithMoreBugsRanking})},$scope.getBugsPerGroup=function(group){console.log(group);var showListBugsPerGroup=$scope.showListBugsPerGroup;restartShowsVariables(),$scope.showListBugsPerGroup=!showListBugsPerGroup;var config={competition:$scope.competition._id,groupId:group};Bugs.getByGroupId(config,function(bugs){$scope.openBugs=bugs,$scope.bugsRepeatListDatatable(),console.log("Bugs",bugs)})},$scope.reportBug=function(){var bug={className:this.className,routineName:this.routineName,description:this.description,competition:$scope.competition._id,group_reported:this.group._id};Bugs.reportBug(bug,function(bug){console.log("Se guardo: ",bug)})},$scope.searchMyOpenBugs=function(){var showMyOpenBugs=$scope.showMyOpenBugs;restartShowsVariables(),$scope.showMyOpenBugs=!showMyOpenBugs;var config={competition:$scope.competition._id};$scope.showMyOpenBugs&&Bugs.getMyOpenBugs(config,function(bugs){$scope.myOpenBugs=bugs,$scope.datatableMyOpenBugs&&$scope.myOpenBugsDatatable(),console.log("Bugs",bugs)})},$scope.searchOpenBugs=function(){var showOpenBugs=$scope.showOpenBugs;restartShowsVariables(),$scope.showOpenBugs=!showOpenBugs},$scope.changeShowStatus=function(vble){var variable=$scope[vble];restartShowsVariables(),$scope[vble]=!variable},$scope.getGroups=function(){console.log($scope.competition),Groups.query(function(groups){$scope.allGroups=groups})},$scope.getAllGroupsWrapperList=function(){Groups.query(function(groups){if($scope.competition)for(var i=groups.length-1;i>=0;i--){for(var tmpFlag=!1,j=$scope.competition.groupsList.length-1;j>=0;j--)if($scope.competition.groupsList[j]._id==groups[i]._id){tmpFlag=!0;break}groups[i].selected=tmpFlag,$scope.wrapperGroupsList.push(groups[i])}else $scope.wrapperGroupsList=groups})},$scope.create=function(){var competition=new Competitions({name:this.name,groupsList:$scope.groupsSelectedList,POINTS:{FIRST_BUG_IN_CLASS_C:this.FIRST_BUG_IN_CLASS_C,NOT_FIRST_BUG_IN_CLASS_C_BUT_YES_IN_ROUTINE_R:this.NOT_FIRST_BUG_IN_CLASS_C_BUT_YES_IN_ROUTINE_R,NOT_FIRST_BUG_IN_CLASS_C_AND_NOT_FIRST_IN_ROUTINE_R:this.NOT_FIRST_BUG_IN_CLASS_C_AND_NOT_FIRST_IN_ROUTINE_R,PERSON_WHO_SUBMITTED_AN_ACCEPTED_BUG:this.PERSON_WHO_SUBMITTED_AN_ACCEPTED_BUG,PERSON_WHO_SUBMITTED_A_REJECTED_BUG:this.PERSON_WHO_SUBMITTED_A_REJECTED_BUG}});competition.$save(function(response){$location.path("competitions/"+response._id),$scope.name="",$scope.groupsSelectedList=[]},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(competition){if(competition){competition.$remove();for(var i in $scope.competitions)$scope.competitions[i]===competition&&$scope.competitions.splice(i,1)}else $scope.competition.$remove(function(){$location.path("competitions")})},$scope.update=function(){var competition=$scope.competition;competition.$update(function(){$location.path("competitions/"+competition._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.competitions=Competitions.query()},$scope.findOne=function(){Competitions.get({competitionId:$stateParams.competitionId},function(competition){$scope.competition=competition,$scope.getAllGroupsWrapperList(),$scope.getGroups()},function(err){console.log(err),$location.path("/")})}}]),angular.module("competitions").controller("MyCompetitionsController",["$scope","$stateParams","$location","Authentication","MyCompetitions","NgTableParams",function($scope,$stateParams,$location,Authentication,MyCompetitions,NgTableParams){$scope.find=function(){MyCompetitions.getMyCompetitions(function(competitions){$scope.competitions=competitions})}}]),angular.module("competitions").factory("Competitions",["$resource",function($resource){return $resource("competitions/:competitionId",{competitionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("competitions").factory("MyCompetitions",["$resource","$http",function($resource,$http){return{getMyCompetitions:function(cb){$http.get("myCompetitions").success(function(competitions){cb(competitions)})}}}]),angular.module("competitions").factory("Bugs",["$resource","$http",function($resource,$http){return{reportBug:function(bug,cb){$http.post("/bugs",bug).success(function(bug){cb(bug)})},getByGroupId:function(config,cb){$http.post("/bugs/getByGroupId",config).success(function(bugs){cb(bugs)})},getOpenBugs:function(config,cb){$http.post("/bugs/getOpenBugs",config).success(function(bugs){cb(bugs)})},getMyOpenBugs:function(config,cb){$http.post("/bugs/getMyOpenBugs",config).success(function(bugs){cb(bugs)})},changeStatus:function(config,cb){$http.put("/bugs/"+config.bugId,config).success(function(bug){cb(bug)})},getUsersRanking:function(config,cb){$http.post("/bugs/getUsersRanking",config).success(function(ranking){cb(ranking)})},getGroupsRanking:function(config,cb){$http.post("/bugs/getGroupsRanking",config).success(function(ranking){cb(ranking)})},getGroupsWithMoreBugsRanking:function(config,cb){$http.post("/bugs/getGroupsWithMoreBugsRanking",config).success(function(ranking){cb(ranking)})}}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("isteven-multi-select",["ng"]).directive("istevenMultiSelect",["$sce","$timeout","$templateCache",function($sce,$timeout,$templateCache){return{restrict:"AE",scope:{inputModel:"=",outputModel:"=",isDisabled:"=",onClear:"&",onClose:"&",onSearchChange:"&",onItemClick:"&",onOpen:"&",onReset:"&",onSelectAll:"&",onSelectNone:"&",translation:"="},templateUrl:"isteven-multi-select.htm",link:function($scope,element,attrs){function genRandomString(length){for(var possible="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",temp="",i=0;length>i;i++)temp+=possible.charAt(Math.floor(Math.random()*possible.length));return temp}$scope.backUp=[],$scope.varButtonLabel="",$scope.spacingProperty="",$scope.indexProperty="",$scope.orientationH=!1,$scope.orientationV=!0,$scope.filteredModel=[],$scope.inputLabel={labelFilter:""},$scope.tabIndex=0,$scope.lang={},$scope.helperStatus={all:!0,none:!0,reset:!0,filter:!0};var prevTabIndex=0,helperItems=[],helperItemsLength=0,checkBoxLayer="",formElements=[],vMinSearchLength=0,clickedItem=null;$scope.clearClicked=function(e){$scope.inputLabel.labelFilter="",$scope.updateFilter(),$scope.select("clear",e)},$scope.numberToArray=function(num){return new Array(num)},$scope.searchChanged=function(){return $scope.inputLabel.labelFilter.length<vMinSearchLength&&$scope.inputLabel.labelFilter.length>0?!1:void $scope.updateFilter()},$scope.updateFilter=function(){$scope.filteredModel=[];var i=0;if("undefined"==typeof $scope.inputModel)return!1;for(i=$scope.inputModel.length-1;i>=0;i--){"undefined"!=typeof $scope.inputModel[i][attrs.groupProperty]&&$scope.inputModel[i][attrs.groupProperty]===!1&&$scope.filteredModel.push($scope.inputModel[i]);var gotData=!1;if("undefined"==typeof $scope.inputModel[i][attrs.groupProperty]){if("undefined"!=typeof attrs.searchProperty&&""!==attrs.searchProperty){for(var key in $scope.inputModel[i])if("boolean"!=typeof $scope.inputModel[i][key]&&String($scope.inputModel[i][key]).toUpperCase().indexOf($scope.inputLabel.labelFilter.toUpperCase())>=0&&attrs.searchProperty.indexOf(key)>-1){gotData=!0;break}}else for(var key in $scope.inputModel[i])if("boolean"!=typeof $scope.inputModel[i][key]&&String($scope.inputModel[i][key]).toUpperCase().indexOf($scope.inputLabel.labelFilter.toUpperCase())>=0){gotData=!0;break}gotData===!0&&$scope.filteredModel.push($scope.inputModel[i])}"undefined"!=typeof $scope.inputModel[i][attrs.groupProperty]&&$scope.inputModel[i][attrs.groupProperty]===!0&&("undefined"!=typeof $scope.filteredModel[$scope.filteredModel.length-1][attrs.groupProperty]&&$scope.filteredModel[$scope.filteredModel.length-1][attrs.groupProperty]===!1?$scope.filteredModel.pop():$scope.filteredModel.push($scope.inputModel[i]))}$scope.filteredModel.reverse(),$timeout(function(){if($scope.getFormElements(),$scope.inputLabel.labelFilter.length>vMinSearchLength){var filterObj=[];angular.forEach($scope.filteredModel,function(value,key){if("undefined"!=typeof value&&"undefined"==typeof value[attrs.groupProperty]){var tempObj=angular.copy(value),index=filterObj.push(tempObj);delete filterObj[index-1][$scope.indexProperty],delete filterObj[index-1][$scope.spacingProperty]}}),$scope.onSearchChange({data:{keyword:$scope.inputLabel.labelFilter,result:filterObj}})}},0)},$scope.getFormElements=function(){formElements=[];var selectButtons=[],inputField=[],checkboxes=[],clearButton=[];$scope.helperStatus.all||$scope.helperStatus.none||$scope.helperStatus.reset?(selectButtons=element.children().children().next().children().children()[0].getElementsByTagName("button"),$scope.helperStatus.filter&&(inputField=element.children().children().next().children().children().next()[0].getElementsByTagName("input"),clearButton=element.children().children().next().children().children().next()[0].getElementsByTagName("button"))):$scope.helperStatus.filter&&(inputField=element.children().children().next().children().children()[0].getElementsByTagName("input"),clearButton=element.children().children().next().children().children()[0].getElementsByTagName("button")),checkboxes=$scope.helperStatus.all||$scope.helperStatus.none||$scope.helperStatus.reset||$scope.helperStatus.filter?element.children().children().next().children().next()[0].getElementsByTagName("input"):element.children().children().next()[0].getElementsByTagName("input");for(var i=0;i<selectButtons.length;i++)formElements.push(selectButtons[i]);for(var i=0;i<inputField.length;i++)formElements.push(inputField[i]);for(var i=0;i<clearButton.length;i++)formElements.push(clearButton[i]);for(var i=0;i<checkboxes.length;i++)formElements.push(checkboxes[i])},$scope.isGroupMarker=function(item,type){return"undefined"!=typeof item[attrs.groupProperty]&&item[attrs.groupProperty]===type?!0:!1},$scope.removeGroupEndMarker=function(item){return"undefined"!=typeof item[attrs.groupProperty]&&item[attrs.groupProperty]===!1?!1:!0},$scope.syncItems=function(item,e,ng_repeat_index){if(e.preventDefault(),e.stopPropagation(),"undefined"!=typeof attrs.disableProperty&&item[attrs.disableProperty]===!0)return!1;if("undefined"!=typeof attrs.isDisabled&&$scope.isDisabled===!0)return!1;if("undefined"!=typeof item[attrs.groupProperty]&&item[attrs.groupProperty]===!1)return!1;var index=$scope.filteredModel.indexOf(item);if("undefined"!=typeof item[attrs.groupProperty]&&item[attrs.groupProperty]===!0){if("undefined"!=typeof attrs.selectionMode&&"SINGLE"===attrs.selectionMode.toUpperCase())return!1;var i,j,startIndex=0,endIndex=$scope.filteredModel.length-1,tempArr=[],nestLevel=0;for(i=index;i<$scope.filteredModel.length&&!(0===nestLevel&&i>index);i++)if("undefined"!=typeof $scope.filteredModel[i][attrs.groupProperty]&&$scope.filteredModel[i][attrs.groupProperty]===!0)0===tempArr.length&&(startIndex=i+1),nestLevel+=1;else if("undefined"!=typeof $scope.filteredModel[i][attrs.groupProperty]&&$scope.filteredModel[i][attrs.groupProperty]===!1){if(nestLevel-=1,tempArr.length>0&&0===nestLevel){var allTicked=!0;for(endIndex=i,j=0;j<tempArr.length;j++)if("undefined"!=typeof tempArr[j][$scope.tickProperty]&&tempArr[j][$scope.tickProperty]===!1){allTicked=!1;break}if(allTicked===!0)for(j=startIndex;endIndex>=j;j++)"undefined"==typeof $scope.filteredModel[j][attrs.groupProperty]&&("undefined"==typeof attrs.disableProperty?($scope.filteredModel[j][$scope.tickProperty]=!1,inputModelIndex=$scope.filteredModel[j][$scope.indexProperty],$scope.inputModel[inputModelIndex][$scope.tickProperty]=!1):$scope.filteredModel[j][attrs.disableProperty]!==!0&&($scope.filteredModel[j][$scope.tickProperty]=!1,inputModelIndex=$scope.filteredModel[j][$scope.indexProperty],$scope.inputModel[inputModelIndex][$scope.tickProperty]=!1));else for(j=startIndex;endIndex>=j;j++)"undefined"==typeof $scope.filteredModel[j][attrs.groupProperty]&&("undefined"==typeof attrs.disableProperty?($scope.filteredModel[j][$scope.tickProperty]=!0,inputModelIndex=$scope.filteredModel[j][$scope.indexProperty],$scope.inputModel[inputModelIndex][$scope.tickProperty]=!0):$scope.filteredModel[j][attrs.disableProperty]!==!0&&($scope.filteredModel[j][$scope.tickProperty]=!0,inputModelIndex=$scope.filteredModel[j][$scope.indexProperty],$scope.inputModel[inputModelIndex][$scope.tickProperty]=!0))}}else tempArr.push($scope.filteredModel[i])}else{if("undefined"!=typeof attrs.selectionMode&&"SINGLE"===attrs.selectionMode.toUpperCase()){for(i=0;i<$scope.filteredModel.length;i++)$scope.filteredModel[i][$scope.tickProperty]=!1;for(i=0;i<$scope.inputModel.length;i++)$scope.inputModel[i][$scope.tickProperty]=!1;$scope.filteredModel[index][$scope.tickProperty]=!0}else $scope.filteredModel[index][$scope.tickProperty]=!$scope.filteredModel[index][$scope.tickProperty];var inputModelIndex=$scope.filteredModel[index][$scope.indexProperty];$scope.inputModel[inputModelIndex][$scope.tickProperty]=$scope.filteredModel[index][$scope.tickProperty]}clickedItem=angular.copy(item),null!==clickedItem&&$timeout(function(){delete clickedItem[$scope.indexProperty],delete clickedItem[$scope.spacingProperty],$scope.onItemClick({data:clickedItem}),clickedItem=null},0),$scope.refreshOutputModel(),$scope.refreshButton(),prevTabIndex=$scope.tabIndex,$scope.tabIndex=ng_repeat_index+helperItemsLength,e.target.focus(),$scope.removeFocusStyle(prevTabIndex),$scope.setFocusStyle($scope.tabIndex),"undefined"!=typeof attrs.selectionMode&&"SINGLE"===attrs.selectionMode.toUpperCase()&&$scope.toggleCheckboxes(e)},$scope.refreshOutputModel=function(){$scope.outputModel=[];var outputProps=[],tempObj={};"undefined"!=typeof attrs.outputProperties?(outputProps=attrs.outputProperties.split(" "),angular.forEach($scope.inputModel,function(value,key){if("undefined"!=typeof value&&"undefined"==typeof value[attrs.groupProperty]&&value[$scope.tickProperty]===!0){tempObj={},angular.forEach(value,function(value1,key1){outputProps.indexOf(key1)>-1&&(tempObj[key1]=value1)});var index=$scope.outputModel.push(tempObj);delete $scope.outputModel[index-1][$scope.indexProperty],delete $scope.outputModel[index-1][$scope.spacingProperty]}})):angular.forEach($scope.inputModel,function(value,key){if("undefined"!=typeof value&&"undefined"==typeof value[attrs.groupProperty]&&value[$scope.tickProperty]===!0){var temp=angular.copy(value),index=$scope.outputModel.push(temp);delete $scope.outputModel[index-1][$scope.indexProperty],delete $scope.outputModel[index-1][$scope.spacingProperty]}})},$scope.refreshButton=function(){$scope.varButtonLabel="";var ctr=0;if(0===$scope.outputModel.length)$scope.varButtonLabel=$scope.lang.nothingSelected;else{var tempMaxLabels=$scope.outputModel.length;"undefined"!=typeof attrs.maxLabels&&""!==attrs.maxLabels&&(tempMaxLabels=attrs.maxLabels),$scope.outputModel.length>tempMaxLabels?$scope.more=!0:$scope.more=!1,angular.forEach($scope.inputModel,function(value,key){"undefined"!=typeof value&&value[attrs.tickProperty]===!0&&(tempMaxLabels>ctr&&($scope.varButtonLabel+=($scope.varButtonLabel.length>0?'</div>, <div class="buttonLabel">':'<div class="buttonLabel">')+$scope.writeLabel(value,"buttonLabel")),ctr++)}),$scope.more===!0&&(tempMaxLabels>0&&($scope.varButtonLabel+=", ... "),$scope.varButtonLabel+="("+$scope.outputModel.length+")")}$scope.varButtonLabel=$sce.trustAsHtml($scope.varButtonLabel+'<span class="caret"></span>')},$scope.itemIsDisabled=function(item){return"undefined"!=typeof attrs.disableProperty&&item[attrs.disableProperty]===!0?!0:$scope.isDisabled===!0?!0:!1},$scope.writeLabel=function(item,type){var temp=attrs[type].split(" "),label="";return angular.forEach(temp,function(value,key){item[value]&&(label+="&nbsp;"+value.split(".").reduce(function(prev,current){return prev[current]},item))}),"BUTTONLABEL"===type.toUpperCase()?label:$sce.trustAsHtml(label)},$scope.toggleCheckboxes=function(e){var clickedEl=element.children()[0];if(angular.element(document).off("click",$scope.externalClickListener),angular.element(document).off("keydown",$scope.keyboardListener),angular.element(checkBoxLayer).hasClass("show"))angular.element(checkBoxLayer).removeClass("show"),angular.element(clickedEl).removeClass("buttonClicked"),angular.element(document).off("click",$scope.externalClickListener),angular.element(document).off("keydown",$scope.keyboardListener),$scope.removeFocusStyle($scope.tabIndex),"undefined"!=typeof formElements[$scope.tabIndex]&&formElements[$scope.tabIndex].blur(),$timeout(function(){$scope.onClose()},0),element.children().children()[0].focus();else{$scope.inputLabel.labelFilter="",$scope.updateFilter(),helperItems=[],helperItemsLength=0,angular.element(checkBoxLayer).addClass("show"),angular.element(clickedEl).addClass("buttonClicked"),angular.element(document).on("click",$scope.externalClickListener),angular.element(document).on("keydown",$scope.keyboardListener),$scope.getFormElements(),$scope.tabIndex=0;var helperContainer=angular.element(element[0].querySelector(".helperContainer"))[0];if("undefined"!=typeof helperContainer){for(var i=0;i<helperContainer.getElementsByTagName("BUTTON").length;i++)helperItems[i]=helperContainer.getElementsByTagName("BUTTON")[i];helperItemsLength=helperItems.length+helperContainer.getElementsByTagName("INPUT").length}element[0].querySelector(".inputFilter")?(element[0].querySelector(".inputFilter").focus(),$scope.tabIndex=$scope.tabIndex+helperItemsLength-2,angular.element(element).children()[0].blur()):$scope.isDisabled||($scope.tabIndex=$scope.tabIndex+helperItemsLength,$scope.inputModel.length>0&&(formElements[$scope.tabIndex].focus(),$scope.setFocusStyle($scope.tabIndex),angular.element(element).children()[0].blur())),$scope.onOpen()}},$scope.externalClickListener=function(e){for(var targetsArr=element.find(e.target.tagName),i=0;i<targetsArr.length;i++)if(e.target==targetsArr[i])return;angular.element(checkBoxLayer.previousSibling).removeClass("buttonClicked"),angular.element(checkBoxLayer).removeClass("show"),angular.element(document).off("click",$scope.externalClickListener),angular.element(document).off("keydown",$scope.keyboardListener),$timeout(function(){$scope.onClose()},0),element.children().children()[0].focus()},$scope.select=function(type,e){var helperIndex=helperItems.indexOf(e.target);switch($scope.tabIndex=helperIndex,type.toUpperCase()){case"ALL":angular.forEach($scope.filteredModel,function(value,key){"undefined"!=typeof value&&value[attrs.disableProperty]!==!0&&"undefined"==typeof value[attrs.groupProperty]&&(value[$scope.tickProperty]=!0)}),$scope.refreshOutputModel(),$scope.refreshButton(),$scope.onSelectAll();break;case"NONE":angular.forEach($scope.filteredModel,function(value,key){"undefined"!=typeof value&&value[attrs.disableProperty]!==!0&&"undefined"==typeof value[attrs.groupProperty]&&(value[$scope.tickProperty]=!1)}),$scope.refreshOutputModel(),$scope.refreshButton(),$scope.onSelectNone();break;case"RESET":angular.forEach($scope.filteredModel,function(value,key){if("undefined"==typeof value[attrs.groupProperty]&&"undefined"!=typeof value&&value[attrs.disableProperty]!==!0){var temp=value[$scope.indexProperty];value[$scope.tickProperty]=$scope.backUp[temp][$scope.tickProperty]}}),$scope.refreshOutputModel(),$scope.refreshButton(),$scope.onReset();break;case"CLEAR":$scope.tabIndex=$scope.tabIndex+1,$scope.onClear();break;case"FILTER":$scope.tabIndex=helperItems.length-1}},$scope.prepareGrouping=function(){var spacing=0;angular.forEach($scope.filteredModel,function(value,key){value[$scope.spacingProperty]=spacing,value[attrs.groupProperty]===!0?spacing+=2:value[attrs.groupProperty]===!1&&(spacing-=2)})},$scope.prepareIndex=function(){var ctr=0;angular.forEach($scope.filteredModel,function(value,key){value[$scope.indexProperty]=ctr,ctr++})},$scope.keyboardListener=function(e){var key=e.keyCode?e.keyCode:e.which,isNavigationKey=!1;if(27===key)e.preventDefault(),e.stopPropagation(),$scope.toggleCheckboxes(e);else if(40===key||39===key||!e.shiftKey&&9==key)for(isNavigationKey=!0,prevTabIndex=$scope.tabIndex,$scope.tabIndex++,$scope.tabIndex>formElements.length-1&&($scope.tabIndex=0,prevTabIndex=formElements.length-1);formElements[$scope.tabIndex].disabled===!0&&($scope.tabIndex++,$scope.tabIndex>formElements.length-1&&($scope.tabIndex=0),$scope.tabIndex!==prevTabIndex););else if(38===key||37===key||e.shiftKey&&9==key)for(isNavigationKey=!0,prevTabIndex=$scope.tabIndex,$scope.tabIndex--,$scope.tabIndex<0&&($scope.tabIndex=formElements.length-1,prevTabIndex=0);formElements[$scope.tabIndex].disabled===!0&&($scope.tabIndex--,$scope.tabIndex!==prevTabIndex);)$scope.tabIndex<0&&($scope.tabIndex=formElements.length-1);if(isNavigationKey===!0){e.preventDefault(),formElements[$scope.tabIndex].focus();var actEl=document.activeElement;"CHECKBOX"===actEl.type.toUpperCase()?($scope.setFocusStyle($scope.tabIndex),$scope.removeFocusStyle(prevTabIndex)):($scope.removeFocusStyle(prevTabIndex),$scope.removeFocusStyle(helperItemsLength),$scope.removeFocusStyle(formElements.length-1))}isNavigationKey=!1},$scope.setFocusStyle=function(tabIndex){angular.element(formElements[tabIndex]).parent().parent().parent().addClass("multiSelectFocus")},$scope.removeFocusStyle=function(tabIndex){angular.element(formElements[tabIndex]).parent().parent().parent().removeClass("multiSelectFocus")},$scope.groupProperty=attrs.groupProperty,$scope.tickProperty=attrs.tickProperty,$scope.directiveId=attrs.directiveId;var tempStr=genRandomString(5);if($scope.indexProperty="idx_"+tempStr,$scope.spacingProperty="spc_"+tempStr,"undefined"!=typeof attrs.orientation&&("HORIZONTAL"===attrs.orientation.toUpperCase()?($scope.orientationH=!0,$scope.orientationV=!1):($scope.orientationH=!1,$scope.orientationV=!0)),checkBoxLayer=element.children().children().next()[0],"undefined"!=typeof attrs.maxHeight){var layer=element.children().children().children()[0];angular.element(layer).attr("style","height:"+attrs.maxHeight+"; overflow-y:scroll;")}for(var property in $scope.helperStatus)$scope.helperStatus.hasOwnProperty(property)&&"undefined"!=typeof attrs.helperElements&&-1===attrs.helperElements.toUpperCase().indexOf(property.toUpperCase())&&($scope.helperStatus[property]=!1);"undefined"!=typeof attrs.selectionMode&&"SINGLE"===attrs.selectionMode.toUpperCase()&&($scope.helperStatus.all=!1,$scope.helperStatus.none=!1),$scope.icon={},$scope.icon.selectAll="&#10003;",$scope.icon.selectNone="&times;",$scope.icon.reset="&#8630;",$scope.icon.tickMark="&#10003;","undefined"!=typeof attrs.translation?($scope.lang.selectAll=$sce.trustAsHtml($scope.icon.selectAll+"&nbsp;&nbsp;"+$scope.translation.selectAll),$scope.lang.selectNone=$sce.trustAsHtml($scope.icon.selectNone+"&nbsp;&nbsp;"+$scope.translation.selectNone),$scope.lang.reset=$sce.trustAsHtml($scope.icon.reset+"&nbsp;&nbsp;"+$scope.translation.reset),$scope.lang.search=$scope.translation.search,$scope.lang.nothingSelected=$sce.trustAsHtml($scope.translation.nothingSelected)):($scope.lang.selectAll=$sce.trustAsHtml($scope.icon.selectAll+"&nbsp;&nbsp;Select All"),$scope.lang.selectNone=$sce.trustAsHtml($scope.icon.selectNone+"&nbsp;&nbsp;Select None"),$scope.lang.reset=$sce.trustAsHtml($scope.icon.reset+"&nbsp;&nbsp;Reset"),$scope.lang.search="Search...",$scope.lang.nothingSelected="None Selected"),$scope.icon.tickMark=$sce.trustAsHtml($scope.icon.tickMark),"undefined"!=typeof attrs.MinSearchLength&&parseInt(attrs.MinSearchLength)>0&&(vMinSearchLength=Math.floor(parseInt(attrs.MinSearchLength)));var firstTimeWatch1=!0,firstTimeWatch2=!0;$scope.$watch("inputModel",function(newVal){newVal&&(firstTimeWatch1&&(void 0!=newVal[$scope.tickProperty]?$scope.setDefaultTicketIfHasNot(newVal,!1):$scope.setDefaultTicketIfHasNot(newVal,!0),firstTimeWatch1=!1),$scope.refreshOutputModel(),$scope.refreshButton())},!0),$scope.$watch("inputModel",function(newVal){newVal&&(firstTimeWatch2&&(void 0!=newVal[$scope.tickProperty]?$scope.setDefaultTicketIfHasNot(newVal,!1):$scope.setDefaultTicketIfHasNot(newVal,!0),firstTimeWatch2=!1),$scope.backUp=angular.copy($scope.inputModel),$scope.updateFilter(),$scope.prepareGrouping(),$scope.prepareIndex(),$scope.refreshOutputModel(),$scope.refreshButton())}),$scope.setDefaultTicketIfHasNot=function(newVal,defaultTicket){for(var i=newVal.length-1;i>=0;i--)newVal[i][$scope.tickProperty]=defaultTicket},$scope.$watch("isDisabled",function(newVal){$scope.isDisabled=newVal});var onTouchStart=function(e){$scope.$apply(function(){$scope.scrolled=!1})};angular.element(document).bind("touchstart",onTouchStart);var onTouchMove=function(e){$scope.$apply(function(){$scope.scrolled=!0})};angular.element(document).bind("touchmove",onTouchMove),$scope.$on("$destroy",function(){angular.element(document).unbind("touchstart",onTouchStart),angular.element(document).unbind("touchmove",onTouchMove);
})}}}]).run(["$templateCache",function($templateCache){var template='<span class="multiSelect inlineBlock"><button id="{{directiveId}}" type="button"ng-click="toggleCheckboxes( $event ); refreshSelectedItems(); refreshButton(); prepareGrouping; prepareIndex();"ng-bind-html="varButtonLabel"ng-disabled="disable-button"></button><div class="checkboxLayer"><div class="helperContainer" ng-if="helperStatus.filter || helperStatus.all || helperStatus.none || helperStatus.reset "><div class="line" ng-if="helperStatus.all || helperStatus.none || helperStatus.reset "><button type="button" class="helperButton"ng-disabled="isDisabled"ng-if="helperStatus.all"ng-click="select( \'all\', $event );"ng-bind-html="lang.selectAll"></button><button type="button" class="helperButton"ng-disabled="isDisabled"ng-if="helperStatus.none"ng-click="select( \'none\', $event );"ng-bind-html="lang.selectNone"></button><button type="button" class="helperButton reset"ng-disabled="isDisabled"ng-if="helperStatus.reset"ng-click="select( \'reset\', $event );"ng-bind-html="lang.reset"></button></div><div class="line" style="position:relative" ng-if="helperStatus.filter"><input placeholder="{{lang.search}}" type="text"ng-click="select( \'filter\', $event )" ng-model="inputLabel.labelFilter" ng-change="searchChanged()" class="inputFilter"/><button type="button" class="clearButton" ng-click="clearClicked( $event )" >×</button> </div> </div> <div class="checkBoxContainer"><div ng-repeat="item in filteredModel | filter:removeGroupEndMarker" class="multiSelectItem"ng-class="{selected: item[ tickProperty ], horizontal: orientationH, vertical: orientationV, multiSelectGroup:item[ groupProperty ], disabled:itemIsDisabled( item )}"ng-click="syncItems( item, $event, $index );" ng-mouseleave="removeFocusStyle( tabIndex );"> <div class="acol" ng-if="item[ spacingProperty ] > 0" ng-repeat="i in numberToArray( item[ spacingProperty ] ) track by $index"></div>  <div class="acol"><label><input class="checkbox focusable" type="checkbox" ng-disabled="itemIsDisabled( item )" ng-checked="item[ tickProperty ]" ng-click="syncItems( item, $event, $index )" /><span ng-class="{disabled:itemIsDisabled( item )}" ng-bind-html="writeLabel( item, \'itemLabel\' )"></span></label></div><span class="tickMark" ng-if="item[ groupProperty ] !== true && item[ tickProperty ] === true" ng-bind-html="icon.tickMark"></span></div></div></div></span>';$templateCache.put("isteven-multi-select.htm",template)}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("countries").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Countries","countries","dropdown","/countries(/create)?",!0,["admin"]),Menus.addSubMenuItem("topbar","countries","List Countries","countries"),Menus.addSubMenuItem("topbar","countries","New Country","countries/create")}]),angular.module("countries").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCountries",{url:"/countries",templateUrl:"modules/countries/views/list-countries.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("createCountry",{url:"/countries/create",templateUrl:"modules/countries/views/create-country.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("viewCountry",{url:"/countries/:countryId",templateUrl:"modules/countries/views/view-country.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("editCountry",{url:"/countries/:countryId/edit",templateUrl:"modules/countries/views/edit-country.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}})}]),angular.module("countries").controller("CountriesController",["$scope","$stateParams","$location","Authentication","Countries",function($scope,$stateParams,$location,Authentication,Countries){$scope.authentication=Authentication,$scope.create=function(){var country=new Countries({name:this.name});country.$save(function(response){$location.path("countries/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(country){if(country){country.$remove();for(var i in $scope.countries)$scope.countries[i]===country&&$scope.countries.splice(i,1)}else $scope.country.$remove(function(){$location.path("countries")})},$scope.update=function(){var country=$scope.country;country.$update(function(){$location.path("countries/"+country._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.countries=Countries.query()},$scope.findOne=function(){$scope.country=Countries.get({countryId:$stateParams.countryId})}}]),angular.module("countries").factory("Countries",["$resource",function($resource){return $resource("countries/:countryId",{countryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("groups").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Groups","groups","dropdown","/groups(/create)?",!0,["admin"]),Menus.addSubMenuItem("topbar","groups","List Groups","groups"),Menus.addSubMenuItem("topbar","groups","New Group","groups/create")}]),angular.module("groups").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGroups",{url:"/groups",templateUrl:"modules/groups/views/list-groups.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("createGroup",{url:"/groups/create",templateUrl:"modules/groups/views/create-group.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("viewGroup",{url:"/groups/:groupId",templateUrl:"modules/groups/views/view-group.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}}).state("editGroup",{url:"/groups/:groupId/edit",templateUrl:"modules/groups/views/edit-group.client.view.html",data:{permissions:{only:["admin"],redirectTo:"home"}}})}]),angular.module("groups").controller("GroupsController",["$scope","$stateParams","$location","Authentication","Groups","Users",function($scope,$stateParams,$location,Authentication,Groups,Users){$scope.authentication=Authentication,$scope.studentsSelectedList=[],$scope.wrapperStudentsList=[],$scope.getAllStudentsWrapperList=function(){Users.query(function(users){if($scope.group)for(var i=users.length-1;i>=0;i--){for(var tmpFlag=!1,j=$scope.group.studentsList.length-1;j>=0;j--)if($scope.group.studentsList[j]._id==users[i]._id){tmpFlag=!0;break}users[i].selected=tmpFlag,$scope.wrapperStudentsList.push(users[i])}else $scope.wrapperStudentsList=users})},$scope.create=function(){var group=new Groups({name:this.name,number:this.groupNumber,githubAccounts:this.githubAccounts});group.$save(function(response){$location.path("groups/"+response._id),$scope.name="",$scope.groupNumber="",$scope.githubAccounts=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(group){if(group){group.$remove();for(var i in $scope.groups)$scope.groups[i]===group&&$scope.groups.splice(i,1)}else $scope.group.$remove(function(){$location.path("groups")})},$scope.update=function(){var group=$scope.group;group.studentsList=$scope.studentsSelectedList,group.$update(function(){$location.path("groups/"+group._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.groups=Groups.query()},$scope.findOne=function(){Groups.get({groupId:$stateParams.groupId},function(group){$scope.group=group,$scope.getAllStudentsWrapperList()})}}]),angular.module("groups").factory("Groups",["$resource",function($resource){return $resource("groups/:groupId",{groupId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","Permission",function($scope,$http,$location,Authentication,Permission){function hasRol(rol,roles){for(var result=!1,i=roles.length-1;i>=0;i--)if(roles[i]===rol){result=!0;break}return result}$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response;var roles=Authentication.user.roles;Permission.defineRole("user",function(stateParams){return hasRol("user",roles)}).defineRole("admin",function(stateParams){return hasRol("admin",roles)}),$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response;var roles=Authentication.user.roles;Permission.defineRole("user",function(stateParams){return hasRol("user",roles)}).defineRole("admin",function(stateParams){return hasRol("admin",roles)}),$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);